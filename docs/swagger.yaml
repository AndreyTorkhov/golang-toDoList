basePath: /
definitions:
  model.Task:
    properties:
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для управления списком задач.
  title: ToDo API
  version: "1.0"
paths:
  /tasks:
    get:
      consumes:
      - application/json
      description: Возвращает список всех задач
      produces:
      - application/json
      responses:
        "200":
          description: Список задач
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список задач
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Добавляет новую задачу
      parameters:
      - description: Создание задачи
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Созданная задача
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Некорректные данные
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать новую задачу
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет задачу по идентификатору
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Задача успешно удалена
        "400":
          description: Некорректный идентификатор задачи
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить задачу
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: Возвращает задачу по указанному идентификатору
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Задача
          schema:
            $ref: '#/definitions/model.Task'
        "404":
          description: Задача не найдена
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить задачу по идентификатору
      tags:
      - tasks
  /tasks/{id}/done:
    patch:
      consumes:
      - application/json
      description: Помечает задачу как выполненную по идентификатору
      parameters:
      - description: ID задачи
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Задача помечена как выполненная
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Некорректный идентификатор задачи
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Пометить задачу как выполненную
      tags:
      - tasks
  /tasks/filter:
    get:
      consumes:
      - application/json
      description: Возвращает список задач с учетом фильтра по выполнению
      parameters:
      - description: Фильтр по выполнению (true для выполненных, false для невыполненных)
        in: query
        name: done
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Список задач
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "500":
          description: Ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить задачи с фильтром по статусу выполнения
      tags:
      - tasks
swagger: "2.0"
